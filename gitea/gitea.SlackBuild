#!/bin/sh

# Slackware build script for gitea

# Copyright 2020 Sergei Fedosoff <eleksir@gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM="gitea"
VERSION="${VERSION:-1.20.4}"
BUILD="${BUILD:-1}"
TAG="${TAG:-_EXs}"

if [ -z "$ARCH" ]; then
	case "$( uname -m )" in
		i?86) ARCH="i586" ;;
		arm*) ARCH="arm" ;;
		*) ARCH="$( uname -m )" ;;
	esac
fi

CWD="$(pwd)"
TMP="${TMP:-/tmp/EXs}"
PKG="$TMP/package-$PRGNAM"
OUTPUT="${OUTPUT:-/tmp}"

if [ "$ARCH" = "i586" ]; then
	SLKCFLAGS="-O2 -march=i586 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
	SLKCFLAGS="-O2 -march=i686 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
	SLKCFLAGS="-O2 -fPIC"
	LIBDIRSUFFIX="64"
else
	SLKCFLAGS="-O2"
	LIBDIRSUFFIX=""
fi

USERNAME=${USERNAME:-git}
GROUPNAME=${GROUPNAME:-git}
USERID=${USERID:-5001}
GROUPID=${GROUPID:-5001}
HOMEDIR=${HOMEDIR:-/var/lib/git}
SHELLNAME=${SHELLNAME:-/bin/bash}

GETUSER=$(getent passwd $USERNAME)
GETGROUP=$(getent group $GROUPNAME)

set -e

if [ -z "$GETUSER" -o -z "$GETGROUP" ]; then
  printf "\n  You must have a \"$PRGNAM\" user and a group to run this script\n\n"
  [ -z "$GETGROUP" ] && printf "  # groupadd -g $GROUPID $GROUPNAME\n"
  [ -z "$GETUSER" ] && printf "  # useradd -u $USERID -d $HOMEDIR -s $SHELLNAME -g $GROUPNAME $USERNAME\n"
  printf "\n"
  exit 1
fi

rm -rf "$PKG"
mkdir -p "$TMP" "$PKG" "$OUTPUT"
cd "$TMP"
rm -rf "$PRGNAM-$VERSION"
tar xvf "$CWD/$PRGNAM-src-$VERSION.tar.gz"
cd "$PRGNAM-src-$VERSION"
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

export TAGS="bindata sqlite sqlite_unlock_notify pgsql mysql mysql8 redis"
export LDFLAGS="-X 'code.gitea.io/gitea/modules/setting.CustomPath=/var/lib/gitea/custom'\
 -X 'code.gitea.io/gitea/modules/setting.CustomConf=/etc/gitea/gitea.ini'\
 -X 'code.gitea.io/gitea/modules/setting.AppWorkPath=/var/lib/gitea'"
make generate
make

install -Dpm 0755 gitea "$PKG/usr/sbin/gitea"
install -Dpm 0644 "$CWD/gitea.ini" "$PKG/etc/gitea/gitea.ini.new"

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

install -Dpm 0644 "$CWD/gitea.init" "$PKG/etc/rc.d/rc.gitea.new"
install -Dpm 0644 "$CWD/gitea.sysconfig" "$PKG/etc/default/gitea.new"
install -Dpm 0644 "$CWD/gitea.logrotate" "$PKG/etc/logrotate.d/gitea.new"

for file in CHANGELOG.md CONTRIBUTING.md LICENSE README.md; do
	install -Dpm 0644 "$file" "${PKG}/usr/doc/${PRGNAM}-${VERSION}/${file}"
done

install -dm 0755 -o "${USERNAME}" -g "${GROUPNAME}" "$PKG/var/lib/gitea"
install -dm 0755 -o "${USERNAME}" -g "${GROUPNAME}" "$PKG/var/lib/gitea/custom"
install -dm 0755 -o "${USERNAME}" -g "${GROUPNAME}" "$PKG/var/log/gitea"
install -dm 0755 -o "${USERNAME}" -g "${GROUPNAME}" "$PKG/var/run/gitea"

install -Dpm 0644 "$CWD/$PRGNAM.SlackBuild" "$PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild"

pushd "$CWD"
	for file in slack-desc slack-required doinst.sh; do
		install -Dpm 0644 "$file" "$PKG/install/$file"
	done
popd

cd "$PKG"
/sbin/makepkg -l y -c n "$OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}"

# vim: ft=sh noet ai ts=4 sw=4 sts=4:
